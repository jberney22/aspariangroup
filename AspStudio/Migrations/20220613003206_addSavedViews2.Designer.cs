// <auto-generated />
using System;
using EagleApp.Areas.Identity.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EagleApp.Migrations
{
    [DbContext(typeof(AspStudioIdentityDbContext))]
    [Migration("20220613003206_addSavedViews2")]
    partial class addSavedViews2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EagleApp.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("EagleApp.Models.AuditLog", b =>
                {
                    b.Property<int>("AuditLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditLogId"), 1L, 1);

                    b.Property<string>("AffectedColumns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<int>("JobLogId")
                        .HasColumnType("int");

                    b.Property<string>("LogAction")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AuditLogId");

                    b.HasIndex("JobLogId");

                    b.ToTable("AuditLog", (string)null);
                });

            modelBuilder.Entity("EagleApp.Models.Competitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Competitors");
                });

            modelBuilder.Entity("EagleApp.Models.ContactType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Type")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("ContactType", (string)null);
                });

            modelBuilder.Entity("EagleApp.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Currency")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerClass")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Terms")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("EagleApp.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("EagleApp.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("JobName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Job");
                });

            modelBuilder.Entity("EagleApp.Models.JobLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("AcceptedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("AwardedTo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BidNumber")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ClientName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ClosedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CloseoutDoneDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("CollectedAmount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("CommPaidDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("CompetitorPrice")
                        .HasColumnType("money");

                    b.Property<string>("Contact")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<int?>("DemoDone")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DemoDoneDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Department")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("EagleBidPrice")
                        .HasColumnType("money");

                    b.Property<decimal?>("EagleBidSales")
                        .HasColumnType("money");

                    b.Property<DateTime?>("EquipReturnDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FinalInvoice")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("FinalInvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InvReturnDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("JeipmeetingDate")
                        .HasColumnType("datetime")
                        .HasColumnName("JEIPMeetingDate");

                    b.Property<string>("JobFolderLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MissedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Mobilization")
                        .HasColumnType("int");

                    b.Property<DateTime?>("MobilizationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OpenDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PaidInFullDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PercentageDone")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("Prep12")
                        .HasColumnType("int")
                        .HasColumnName("Prep1/2");

                    b.Property<DateTime?>("Prep12Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("Prep14")
                        .HasColumnType("int")
                        .HasColumnName("Prep1/4");

                    b.Property<DateTime?>("Prep14Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("Prep34")
                        .HasColumnType("int")
                        .HasColumnName("Prep3/4");

                    b.Property<DateTime?>("Prep34Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("PrepDone")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PrepDoneDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ProductType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProjectNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectOc")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("ProjectOC");

                    b.Property<bool>("Rejected")
                        .HasColumnType("bit");

                    b.Property<int?>("Removal12")
                        .HasColumnType("int")
                        .HasColumnName("Removal 1/2");

                    b.Property<DateTime?>("Removal12Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("RemovalDone")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemovalDoneDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Rep")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalComplete")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("JobLog", (string)null);
                });

            modelBuilder.Entity("EagleApp.Models.JobStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobStatus");
                });

            modelBuilder.Entity("EagleApp.Models.Ocawa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Ocawaname")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("OCAWAName");

                    b.HasKey("Id");

                    b.ToTable("OCAWA", (string)null);
                });

            modelBuilder.Entity("EagleApp.Models.SavedViews", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("SavedJsonCriteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViewName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SavedViews");
                });

            modelBuilder.Entity("EagleApp.Models.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Type1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Type");

                    b.HasKey("Id");

                    b.ToTable("Type", (string)null);
                });

            modelBuilder.Entity("EagleApp.Models.VDashboardDatum", b =>
                {
                    b.Property<DateTime?>("AcceptedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("AwardedTo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BidNumber")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime?>("ClosedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CloseoutDoneDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("CollectedAmount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("CommPaidDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("CompetitorPrice")
                        .HasColumnType("money");

                    b.Property<string>("Contact")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("EagleBidPrice")
                        .HasColumnType("money");

                    b.Property<decimal?>("EagleBidSales")
                        .HasColumnType("money");

                    b.Property<string>("EstimatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinalInvoice")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("FinalInvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("JeipmeetingDate")
                        .HasColumnType("datetime")
                        .HasColumnName("JEIPMeetingDate");

                    b.Property<string>("JobFolderLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MissedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OpenDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PaidInFullDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ProductType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProjectNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectOc")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ProjectOC");

                    b.Property<bool?>("Rejected")
                        .HasColumnType("bit");

                    b.Property<string>("Rep")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.ToView("v_dashboard_data");
                });

            modelBuilder.Entity("EagleApp.Models.VGetJobLog", b =>
                {
                    b.Property<DateTime?>("AcceptedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("AwardedTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BidNumber")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime?>("ClosedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CloseoutDoneDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("CollectedAmount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("CommPaidDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("CompetitorPrice")
                        .HasColumnType("money");

                    b.Property<string>("ContactType")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("EagleBidPrice")
                        .HasColumnType("money");

                    b.Property<decimal?>("EagleBidSales")
                        .HasColumnType("money");

                    b.Property<string>("EstimatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinalInvoice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FinalInvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("JeipmeetingDate")
                        .HasColumnType("datetime")
                        .HasColumnName("JEIPMeetingDate");

                    b.Property<string>("JobFolderLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MissedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OpenDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PaidInFullDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ProductType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectOc")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ProjectOC");

                    b.Property<bool?>("Rejected")
                        .HasColumnType("bit");

                    b.Property<string>("Rep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.ToView("v_GetJobLogs");
                });

            modelBuilder.Entity("EagleApp.Models.VWipReport", b =>
                {
                    b.Property<decimal?>("AmountDone")
                        .HasColumnType("money");

                    b.Property<DateTime?>("ClosedDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("CollectedAmount")
                        .HasColumnType("money");

                    b.Property<string>("ContactType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ContactTypeDateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CustomerDateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAddedStr")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<int?>("DaysWip")
                        .HasColumnType("int");

                    b.Property<int?>("DemoDone")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DemoDoneDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("EagleBidPrice")
                        .HasColumnType("money");

                    b.Property<decimal?>("EagleBidSales")
                        .HasColumnType("money");

                    b.Property<DateTime?>("EquipReturnDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InvReturnDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Mobilization")
                        .HasColumnType("int");

                    b.Property<DateTime?>("MobilizationDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("OpenDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PercentageDone")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("Prep12")
                        .HasColumnType("int")
                        .HasColumnName("Prep1/2");

                    b.Property<DateTime?>("Prep12Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("Prep13")
                        .HasColumnType("int")
                        .HasColumnName("Prep1/3");

                    b.Property<int?>("Prep14")
                        .HasColumnType("int")
                        .HasColumnName("Prep1/4");

                    b.Property<DateTime?>("Prep14Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Prep34Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("PrepDone")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PrepDoneDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ProjectNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Removal12")
                        .HasColumnType("int")
                        .HasColumnName("Removal 1/2");

                    b.Property<DateTime?>("Removal12Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("Removal34")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemovalDoneDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Rep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalComplete")
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .IsFixedLength();

                    b.ToView("v_WipReport");
                });

            modelBuilder.Entity("EagleApp.Models.Wip", b =>
                {
                    b.Property<int>("Wipid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WIPId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Wipid"), 1L, 1);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EquipReturnDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InvReturnDate")
                        .HasColumnType("datetime");

                    b.Property<int>("JoblogId")
                        .HasColumnType("int");

                    b.Property<int?>("Mobilization")
                        .HasColumnType("int");

                    b.Property<DateTime?>("MobilizationDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Prep12")
                        .HasColumnType("int")
                        .HasColumnName("Prep1/2");

                    b.Property<DateTime?>("Prep12Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("Prep13")
                        .HasColumnType("int")
                        .HasColumnName("Prep1/3");

                    b.Property<int?>("Prep14")
                        .HasColumnType("int")
                        .HasColumnName("Prep1/4");

                    b.Property<DateTime?>("Prep14Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Prep34Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("PrepDone")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PrepDoneDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Removal12")
                        .HasColumnType("int")
                        .HasColumnName("Removal 1/2");

                    b.Property<DateTime?>("Removal12Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("Removal34")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemovalDoneDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TotalComplete")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.HasKey("Wipid");

                    b.HasIndex("JoblogId");

                    b.ToTable("WIP", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("EagleApp.Models.AuditLog", b =>
                {
                    b.HasOne("EagleApp.Models.JobLog", "JobLog")
                        .WithMany("AuditLogs")
                        .HasForeignKey("JobLogId")
                        .IsRequired()
                        .HasConstraintName("FK_AuditLog_JobLog");

                    b.Navigation("JobLog");
                });

            modelBuilder.Entity("EagleApp.Models.Wip", b =>
                {
                    b.HasOne("EagleApp.Models.JobLog", "Joblog")
                        .WithMany("Wips")
                        .HasForeignKey("JoblogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_WIP_JobLog");

                    b.Navigation("Joblog");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("EagleApp.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("EagleApp.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EagleApp.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("EagleApp.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EagleApp.Models.JobLog", b =>
                {
                    b.Navigation("AuditLogs");

                    b.Navigation("Wips");
                });
#pragma warning restore 612, 618
        }
    }
}
